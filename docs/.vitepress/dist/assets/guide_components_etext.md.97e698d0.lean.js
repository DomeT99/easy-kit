import{b as y}from"./chunks/useUpdateModelValue.c0cd99d5.js";import{d as o,o as p,c,b as r,h as m,I as l,E as D,V as i,C as d,t as F}from"./chunks/framework.4aa8203f.js";import{E as h}from"./chunks/ExampleLayout.aebeb686.js";const g=["minlength","maxlength","readonly","placeholder","disabled"],x={name:"EText"},C=o({...x,props:{placeHolder:null,maxLength:null,minLenght:null,readOnly:{type:Boolean},disabled:{type:Boolean}},setup(t,{emit:s}){const e=t;return(n,a)=>(p(),c("input",{type:"text",onInput:a[0]||(a[0]=u=>r(y)(u,s)),minlength:e.minLenght,maxlength:e.maxLength,readonly:e.readOnly,placeholder:e.placeHolder,disabled:e.disabled},null,40,g))}}),f=i(`<h1 id="etext" tabindex="-1">EText <a class="header-anchor" href="#etext" aria-label="Permalink to &quot;EText&quot;">​</a></h1><p>The <code>EText</code> component replaces the standard html input type text and encapsulates well-defined logic that can be reused throughout the app.</p><h2 id="basic-usage" tabindex="-1">Basic Usage <a class="header-anchor" href="#basic-usage" aria-label="Permalink to &quot;Basic Usage&quot;">​</a></h2><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">import { ref } from &quot;vue&quot;;</span></span>
<span class="line"><span style="color:#A6ACCD;">import { EText } from &quot;easy-kit-component&quot;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">const text = ref();</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">EText</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div>`,4),b=d("br",null,null,-1),_=i(`<h2 id="api-reference" tabindex="-1">API Reference <a class="header-anchor" href="#api-reference" aria-label="Permalink to &quot;API Reference&quot;">​</a></h2><ul><li><strong>Props</strong></li></ul><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Checkbox</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">disabled</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,3),q=JSON.parse('{"title":"EText","description":"","frontmatter":{"prev":{"text":"ECheckbox","link":"/guide/components/echeckbox.md"},"next":{"text":"ERadio","link":"/guide/components/eradio.md"}},"headers":[],"relativePath":"guide/components/etext.md"}'),A={name:"guide/components/etext.md"},v=o({...A,setup(t){const s=m();return(e,n)=>(p(),c("div",null,[f,l(h,null,{default:D(()=>[l(r(C),{id:"text",modelValue:s.value,"onUpdate:modelValue":n[0]||(n[0]=a=>s.value=a)},null,8,["modelValue"]),b,d("h6",null,"Message is : "+F(s.value),1)]),_:1}),_]))}});export{q as __pageData,v as default};
